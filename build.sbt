name := "lib-unit-of-measurement"

organization := "io.flow"

scalaVersion := "2.13.10"

enablePlugins(GitVersioning)
git.useGitDescribe := true

lazy val allScalacOptions = Seq(
  "-feature",
  "-Xfatal-warnings",
  "-unchecked",
  "-Xcheckinit",
  "-Xlint:adapted-args",
  "-Ypatmat-exhaust-depth",
  "100", // Fixes: Exhaustivity analysis reached max recursion depth, not all missing cases are reported.
  "-Wconf:src=generated/.*:silent",
  "-Wconf:src=target/.*:silent", // silence the unused imports errors generated by the Play Routes
  "-release:17"
)

lazy val root = project
  .in(file("."))
  .settings(
    scalafmtOnCompile := true,
    scalacOptions ++= allScalacOptions,
    libraryDependencies ++= Seq(
      "joda-time" % "joda-time" % "2.12.5",
      "org.joda" % "joda-convert" % "2.2.3",
      "org.scalatest" %% "scalatest" % "3.2.17" % Test,
      "org.scalatest" %% "scalatest-funspec" % "3.2.17" % Test,
      "org.scalatest" %% "scalatest-shouldmatchers" % "3.2.17" % Test
    ),
    Test / javaOptions ++= Seq(
      "--add-exports=java.base/sun.security.x509=ALL-UNNAMED",
      "--add-opens=java.base/sun.security.ssl=ALL-UNNAMED",
      "--add-opens=java.base/java.lang=ALL-UNNAMED"
    )
  )
credentials += Credentials(
  "Artifactory Realm",
  "flow.jfrog.io",
  System.getenv("ARTIFACTORY_USERNAME"),
  System.getenv("ARTIFACTORY_PASSWORD")
)

publishTo := {
  val host = "https://flow.jfrog.io/flow"
  if (isSnapshot.value) {
    Some("Artifactory Realm" at s"$host/libs-snapshot-local;build.timestamp=" + new java.util.Date().getTime)
  } else {
    Some("Artifactory Realm" at s"$host/libs-release-local")
  }
}
